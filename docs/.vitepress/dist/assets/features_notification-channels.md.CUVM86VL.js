import{_ as a,c as t,o as i,ag as s}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Notification Channels","description":"","frontmatter":{},"headers":[],"relativePath":"features/notification-channels.md","filePath":"features/notification-channels.md"}'),n={name:"features/notification-channels.md"};function l(o,e,r,h,c,p){return i(),t("div",null,[...e[0]||(e[0]=[s(`<h1 id="notification-channels" tabindex="-1">Notification Channels <a class="header-anchor" href="#notification-channels" aria-label="Permalink to &quot;Notification Channels&quot;">â€‹</a></h1><p>Notification Channels define where your alerts are sent. Configure multiple channels to ensure you never miss important notifications.</p><h2 id="supported-channel-types" tabindex="-1">Supported Channel Types <a class="header-anchor" href="#supported-channel-types" aria-label="Permalink to &quot;Supported Channel Types&quot;">â€‹</a></h2><h3 id="ðŸ“±-telegram" tabindex="-1">ðŸ“± Telegram <a class="header-anchor" href="#ðŸ“±-telegram" aria-label="Permalink to &quot;ðŸ“± Telegram&quot;">â€‹</a></h3><p>Receive alerts directly in Telegram (personal or group chat).</p><p><strong>Setup:</strong></p><ol><li>Open Telegram and search for <code>@userinfobot</code></li><li>Start a chat and it will send you your Chat ID</li><li>In the app, click <strong>&quot;Add Channel&quot;</strong> â†’ Telegram</li><li>Enter your Bot Token and Chat ID</li><li>Click <strong>&quot;Test&quot;</strong> to verify</li></ol><div class="info custom-block"><p class="custom-block-title">Bot Token</p><p>Contact @BotFather on Telegram to create a bot and get your token.</p></div><h3 id="ðŸ’¬-discord" tabindex="-1">ðŸ’¬ Discord <a class="header-anchor" href="#ðŸ’¬-discord" aria-label="Permalink to &quot;ðŸ’¬ Discord&quot;">â€‹</a></h3><p>Send alerts to a Discord server channel.</p><p><strong>Setup:</strong></p><ol><li>Go to your Discord server</li><li>Navigate to Server Settings â†’ Integrations â†’ Webhooks</li><li>Click <strong>&quot;New Webhook&quot;</strong></li><li>Choose the channel and copy the Webhook URL</li><li>In the app, add the Discord channel with your webhook URL</li><li>Click <strong>&quot;Test&quot;</strong> to verify</li></ol><h3 id="ðŸ’¼-slack" tabindex="-1">ðŸ’¼ Slack <a class="header-anchor" href="#ðŸ’¼-slack" aria-label="Permalink to &quot;ðŸ’¼ Slack&quot;">â€‹</a></h3><p>Post alerts to a Slack workspace channel.</p><p><strong>Setup:</strong></p><ol><li>Go to your Slack workspace</li><li>Navigate to Apps â†’ Incoming Webhooks</li><li>Create a new webhook and choose a channel</li><li>Copy the Webhook URL</li><li>In the app, add the Slack channel with your webhook URL</li><li>Click <strong>&quot;Test&quot;</strong> to verify</li></ol><h3 id="ðŸ“§-email" tabindex="-1">ðŸ“§ Email <a class="header-anchor" href="#ðŸ“§-email" aria-label="Permalink to &quot;ðŸ“§ Email&quot;">â€‹</a></h3><p>Receive alerts via email.</p><p><strong>Setup:</strong></p><ol><li>Click <strong>&quot;Add Channel&quot;</strong> â†’ Email</li><li>Enter your email address</li><li>Click <strong>&quot;Test&quot;</strong> to verify (check spam folder)</li></ol><div class="warning custom-block"><p class="custom-block-title">Delivery Time</p><p>Email delivery can be slower than other channels (30 seconds to few minutes).</p></div><h3 id="ðŸš¨-pagerduty" tabindex="-1">ðŸš¨ PagerDuty <a class="header-anchor" href="#ðŸš¨-pagerduty" aria-label="Permalink to &quot;ðŸš¨ PagerDuty&quot;">â€‹</a></h3><p>Create incidents in PagerDuty for critical alerts.</p><p><strong>Setup:</strong></p><ol><li>Log in to PagerDuty</li><li>Go to Services â†’ Select/Create a service</li><li>Add an integration â†’ Events API v2</li><li>Copy the Integration Key</li><li>In the app, add PagerDuty channel with the integration key</li><li>Click <strong>&quot;Test&quot;</strong> to verify</li></ol><h3 id="ðŸ”—-custom-webhook" tabindex="-1">ðŸ”— Custom Webhook <a class="header-anchor" href="#ðŸ”—-custom-webhook" aria-label="Permalink to &quot;ðŸ”— Custom Webhook&quot;">â€‹</a></h3><p>Send alerts to any HTTP endpoint.</p><p><strong>Setup:</strong></p><ol><li>Prepare your webhook endpoint</li><li>In the app, click <strong>&quot;Add Channel&quot;</strong> â†’ Webhook</li><li>Enter your webhook URL</li><li>Select HTTP method (POST recommended)</li><li>Click <strong>&quot;Test&quot;</strong> to verify</li></ol><p><strong>Webhook Payload:</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;severity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;critical&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alert message text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;subaccount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Account name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2024-10-22T10:30:00Z&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;metadata&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;market&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BTC-USD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;condition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Liquidation Distance&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="managing-channels" tabindex="-1">Managing Channels <a class="header-anchor" href="#managing-channels" aria-label="Permalink to &quot;Managing Channels&quot;">â€‹</a></h2><h3 id="testing-channels" tabindex="-1">Testing Channels <a class="header-anchor" href="#testing-channels" aria-label="Permalink to &quot;Testing Channels&quot;">â€‹</a></h3><p>Always test new channels before using them for alerts. Click the <strong>&quot;Test&quot;</strong> button to send a test notification.</p><h3 id="editing-channels" tabindex="-1">Editing Channels <a class="header-anchor" href="#editing-channels" aria-label="Permalink to &quot;Editing Channels&quot;">â€‹</a></h3><p>Modify channel settings by clicking <strong>&quot;Edit&quot;</strong>. You can update:</p><ul><li>Channel credentials/URLs</li><li>Channel name/description</li><li>Enable/disable status</li></ul><h3 id="deleting-channels" tabindex="-1">Deleting Channels <a class="header-anchor" href="#deleting-channels" aria-label="Permalink to &quot;Deleting Channels&quot;">â€‹</a></h3><p>You can delete channels that are no longer needed. However, you cannot delete a channel if it&#39;s used by any active alert rules. Disable or update those rules first.</p><h2 id="channel-status" tabindex="-1">Channel Status <a class="header-anchor" href="#channel-status" aria-label="Permalink to &quot;Channel Status&quot;">â€‹</a></h2><p>Channels can have these statuses:</p><ul><li><strong>Enabled</strong>: Active and will receive alerts</li><li><strong>Disabled</strong>: Paused, won&#39;t receive alerts</li><li><strong>Error</strong>: Last delivery failed (check configuration)</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">â€‹</a></h2><h3 id="multiple-channels" tabindex="-1">Multiple Channels <a class="header-anchor" href="#multiple-channels" aria-label="Permalink to &quot;Multiple Channels&quot;">â€‹</a></h3><p>Configure multiple channels for redundancy. If one fails, others ensure you still receive notifications.</p><h3 id="severity-based-routing" tabindex="-1">Severity-Based Routing <a class="header-anchor" href="#severity-based-routing" aria-label="Permalink to &quot;Severity-Based Routing&quot;">â€‹</a></h3><p>Use different channels for different severities:</p><ul><li><strong>Info</strong>: Email</li><li><strong>Warning</strong>: Telegram/Discord</li><li><strong>Critical</strong>: PagerDuty + Telegram</li></ul><h3 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">â€‹</a></h3><p>Always test channels after setup and periodically verify they&#39;re working. Some services (like webhooks) may change URLs or expire tokens.</p><div class="tip custom-block"><p class="custom-block-title">Recommended Channels</p><p>For critical alerts, use instant channels like Telegram or Discord. Email is better suited for informational alerts due to potential delays.</p></div><h2 id="security" tabindex="-1">Security <a class="header-anchor" href="#security" aria-label="Permalink to &quot;Security&quot;">â€‹</a></h2><p>Keep your channel credentials secure:</p><ul><li>Never share bot tokens or webhook URLs publicly</li><li>Rotate credentials if compromised</li><li>Use separate bots/webhooks for different purposes</li><li>Limit webhook endpoint access to known IPs if possible</li></ul>`,54)])])}const k=a(n,[["render",l]]);export{u as __pageData,k as default};
